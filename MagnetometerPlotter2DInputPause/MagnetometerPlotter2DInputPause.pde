import processing.serial.*;

float CM_hfss[] = {

0.000, 0.007, 0.014, 0.021, 0.028, 0.035, 0.041, 0.048, 0.055, 0.062, 0.069, 0.076, 0.083, 0.090, 0.097, 0.104, 0.110, 0.117, 0.124, 0.131, 0.138, 0.145, 0.152, 0.159, 0.166, 0.173, 0.181, 0.189, 0.197, 0.205, 0.213, 0.221, 0.229, 0.237, 0.244, 0.252, 0.260, 0.268, 0.276, 0.284, 0.292, 0.300, 0.308, 0.316, 0.324, 0.332, 0.340, 0.348, 0.356, 0.364, 0.372, 0.380, 0.389, 0.397, 0.405, 0.414, 0.422, 0.430, 0.439, 0.447, 0.455, 0.464, 0.472, 0.480, 0.488, 0.497, 0.505, 0.513, 0.522, 0.530, 0.538, 0.547, 0.555, 0.563, 0.572, 0.580, 0.588, 0.596, 0.604, 0.612, 0.620, 0.628, 0.636, 0.644, 0.652, 0.660, 0.668, 0.676, 0.684, 0.692, 0.700, 0.708, 0.716, 0.724, 0.732, 0.740, 0.748, 0.756, 0.764, 0.772, 0.780, 0.788, 0.796, 0.804, 0.812, 0.821, 0.829, 0.837, 0.845, 0.853, 0.861, 0.869, 0.878, 0.886, 0.894, 0.902, 0.910, 0.918, 0.927, 0.935, 0.943, 0.951, 0.959, 0.967, 0.976, 0.984, 0.992, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 1.000, 0.991, 0.983, 0.974, 0.965, 0.957, 0.948, 0.940, 0.931, 0.922, 0.914, 0.905, 0.896, 0.888, 0.879, 0.871, 0.862, 0.853, 0.845, 0.836, 0.827, 0.819, 0.810, 0.802, 0.793, 0.784, 0.776, 0.768, 0.760, 0.752, 0.744, 0.736, 0.728, 0.720, 0.712, 0.704, 0.696, 0.688, 0.680, 0.672, 0.664, 0.656, 0.648, 0.640, 0.632, 0.624, 0.616, 0.608, 0.600, 0.592, 0.584, 0.576, 0.569, 0.561, 0.553, 0.546, 0.538, 0.530, 0.523, 0.515, 0.507, 0.500, 0.492, 0.484, 0.477, 0.469, 0.461, 0.453, 0.446, 0.438, 0.430, 0.423, 0.415, 0.407, 0.400, 0.392, 0.384, 0.377, 0.370, 0.363, 0.355, 0.348, 0.341, 0.334, 0.326, 0.319, 0.312, 0.305, 0.297, 0.290, 0.283, 0.276, 0.268, 0.261, 0.254, 0.247, 0.240, 0.232, 0.225, 0.218, 0.211, 0.203, 0.196, 0.189, 0.181, 0.173, 0.166, 0.158, 0.151, 0.143, 0.136, 0.128, 0.121, 0.113, 0.106, 0.098, 0.090, 0.083, 0.075, 0.068, 0.060, 0.053, 0.045, 0.038, 0.030, 0.023, 0.015, 0.008, 0.000,


};
Serial mySerial;
PFont myFont;
String inString;
float[] values;
int valCounter;
int xPixels, yPixels, offset, spacer;


// ====================================

int grid = 15;              // This can be changed to adjust resolution of scan
String COM_PORT = "COM6";   // This can be changed to set the COM port of the microcontroller device
float minSensorValue = 0;   // This can be changed to calibrate the minimum input reading from the sensor
float maxSensorValue = 6;   // This can be changed to calibrate the maximum input reading from the sensor

// ====================================



void setup() {
  size(600, 600);
  xPixels = yPixels = grid;
  offset = width/20;
  spacer = (width-(offset*2))/(grid);
  
  myFont = loadFont("ProcessingSansPro-Regular-18.vlw"); 
  textFont(myFont, 18); 
  
  mySerial = new Serial( this, COM_PORT, 9600 );
  mySerial.bufferUntil(10);    // 10 = ASCII linefeed 
  
  values = new float[xPixels*yPixels];
  valCounter = 0;
  
  strokeWeight(0);
  background(0);
  
}

void draw() {
  background(0);
  
  int dir = 1;
  for (int y = 0; y < yPixels; y++) {
    int x=0;
    if (dir == 1)
      x = 0;
    if (dir == -1)
      x = xPixels-1;
    for (int xInd = 0; xInd < xPixels; xInd++, x+=dir) {
      int val = int(values[xInd+y*yPixels]);
      color c1 = color(map(CM_hfss[val],0,1,0,255),
                      map(CM_hfss[val+512],0,1,0,255),
                      map(CM_hfss[val+1024],0,1,0,255));
      fill(c1);
      square(offset + x * spacer, offset + y * spacer, spacer);
    }
    dir *= -1;
  }
  
  
  fill(255);
  text("Hold sensor in position " +valCounter+ ", then press any key to take the measurement...", 30,20); 
  
}



void serialEvent(Serial p) {
  inString = p.readString();
}

void keyTyped() {
  if ( inString != null ) {
          String[] list = split(inString, ',');
          
          float x = float(list[0]);
          float y = float(list[1]);
          float z = float(list[2]);
          
          float temp = mag(x, y, z);
          
          //println(temp);
          
          if (temp < 0)
            temp = 0;
          if (temp > 6)
            temp = 6;
          
          values[valCounter] = map(temp, minSensorValue, maxSensorValue, 0, 512);
          if (valCounter < xPixels*yPixels-1)
            valCounter++;
          else {
            valCounter = 0;
            saveFrame();
          }
     }
}
